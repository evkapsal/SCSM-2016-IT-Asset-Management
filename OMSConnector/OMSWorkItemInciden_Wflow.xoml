<SequentialWorkflowActivity x:Class="WorkflowAuthoring.OMSWorkItemInciden_Wflow" x:Name="OMSWorkItemInciden_Wflow" xmlns:ns0="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.ActivityLibrary, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WindowsPowerShellScript Parameter="{x:Null}" SnapIns="{x:Null}" x:Name="windowsPowerShellScript1" PropertyToBind="{x:Null}" ScriptBody="&lt;# &#xD;&#xA; .NOTES&#xD;&#xA; ===========================================================================&#xD;&#xA;  Created with:  SAPIEN Technologies, Inc., PowerShell Studio 2016 v5.2.117&#xD;&#xA;  Created on:    12/1/2016 21:45&#xD;&#xA;  Created by:   Evangelos Kapsalakis  &#xD;&#xA;  Organization: MSHellas&#xD;&#xA;  Filename: SCSMOMS.ps1     &#xD;&#xA; ===========================================================================&#xD;&#xA; .DESCRIPTION&#xD;&#xA;  A description of the file.&#xD;&#xA;#&gt;&#xD;&#xA;&#xD;&#xA;param&#xD;&#xA;(&#xD;&#xA; [parameter(Mandatory = $true)]&#xD;&#xA; $ID&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;Import-Module SMLets&#xD;&#xA;$OMSConnectorClass = Get-SCSMClass -Name OMSConnector$&#xD;&#xA;$Connector = Get-SCSMObject -Class $OMSConnectorClass&#xD;&#xA;if ($Connector.IsActive -eq $true)&#xD;&#xA;{&#xD;&#xA; Try&#xD;&#xA; {&#xD;&#xA;  $events = [System.Diagnostics.EventLog]::SourceExists(&quot;OMS Connector&quot;);&#xD;&#xA; }&#xD;&#xA; finally&#xD;&#xA; {&#xD;&#xA;  if ($events -ne $true)&#xD;&#xA;  {&#xD;&#xA;   New-EventLog -LogName 'Operations Manager' -Source 'OMS Connector'&#xD;&#xA;   Write-EventLog -LogName 'Operations Manager' -Source 'OMS Connector' -EventId 10000 -Category 0 -EntryType Information -Message &quot;OMS Connector Succesfully Create Event Log Source&quot;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  Write-EventLog -LogName 'Operations Manager' -Source 'OMS Connector' -EventId 10000 -Category 0 -EntryType Information -Message &quot;OMS Connector Start Processing Incidents Objects&quot;&#xD;&#xA; }&#xD;&#xA; &#xD;&#xA; # Replace with your Workspace ID&#xD;&#xA; $CustomerId = $($Connector.CustomerId)&#xD;&#xA; &#xD;&#xA; # Replace with your Primary Key&#xD;&#xA; $SharedKey = $($Connector.Key)&#xD;&#xA; &#xD;&#xA; # Specify the name of the record type that you'll be creating&#xD;&#xA; $LogType = &quot;SCSMLog&quot;&#xD;&#xA; &#xD;&#xA; # Specify a field with the created time for the records&#xD;&#xA; $TimeStampField = &quot;DateValue&quot;&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; # Create the function to create the authorization signature&#xD;&#xA; Function Build-Signature ($customerId, $sharedKey, $date, $contentLength, $method, $contentType, $resource)&#xD;&#xA; {&#xD;&#xA;  $xHeaders = &quot;x-ms-date:&quot; + $date&#xD;&#xA;  $stringToHash = $method + &quot;`n&quot; + $contentLength + &quot;`n&quot; + $contentType + &quot;`n&quot; + $xHeaders + &quot;`n&quot; + $resource&#xD;&#xA;  &#xD;&#xA;  $bytesToHash = [Text.Encoding]::UTF8.GetBytes($stringToHash)&#xD;&#xA;  $keyBytes = [Convert]::FromBase64String($sharedKey)&#xD;&#xA;  &#xD;&#xA;  $sha256 = New-Object System.Security.Cryptography.HMACSHA256&#xD;&#xA;  $sha256.Key = $keyBytes&#xD;&#xA;  $calculatedHash = $sha256.ComputeHash($bytesToHash)&#xD;&#xA;  $encodedHash = [Convert]::ToBase64String($calculatedHash)&#xD;&#xA;  $authorization = 'SharedKey {0}:{1}' -f $customerId, $encodedHash&#xD;&#xA;  return $authorization&#xD;&#xA; }&#xD;&#xA; &#xD;&#xA; &#xD;&#xA; # Create the function to create and post the request&#xD;&#xA; Function Post-OMSData($customerId, $sharedKey, $body, $logType)&#xD;&#xA; {&#xD;&#xA;  $method = &quot;POST&quot;&#xD;&#xA;  $contentType = &quot;application/json&quot;&#xD;&#xA;  $resource = &quot;/api/logs&quot;&#xD;&#xA;  $rfc1123date = [DateTime]::UtcNow.ToString(&quot;r&quot;)&#xD;&#xA;  $contentLength = $body.Length&#xD;&#xA;  $signature = Build-Signature `&#xD;&#xA;  -customerId $customerId `&#xD;&#xA;  -sharedKey $sharedKey `&#xD;&#xA;  -date $rfc1123date `&#xD;&#xA;  -contentLength $contentLength `&#xD;&#xA;  -fileName $fileName `&#xD;&#xA;  -method $method `&#xD;&#xA;  -contentType $contentType `&#xD;&#xA;  -resource $resource&#xD;&#xA;  $uri = &quot;https://&quot; + $customerId + &quot;.ods.opinsights.azure.com&quot; + $resource + &quot;?api-version=2016-04-01&quot;&#xD;&#xA;  &#xD;&#xA;  $headers = @{&#xD;&#xA;   &quot;Authorization&quot; = $signature;&#xD;&#xA;   &quot;Log-Type&quot; = $logType;&#xD;&#xA;   &quot;x-ms-date&quot; = $rfc1123date;&#xD;&#xA;   &quot;time-generated-field&quot; = $TimeStampField;&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  $response = Invoke-WebRequest -Uri $uri -Method $method -ContentType $contentType -Headers $headers -Body $body -UseBasicParsing -ErrorAction Stop&#xD;&#xA;  return $response.StatusCode&#xD;&#xA;  &#xD;&#xA; }&#xD;&#xA; &#xD;&#xA; $IR = Get-SCSMObject -id $ID&#xD;&#xA; if ($IR)&#xD;&#xA; {&#xD;&#xA;  $dt = [DateTime]::UtcNow.ToString(&quot;s&quot;)&#xD;&#xA;  $sd = Get-Date ($IR.CreatedDate) -Format r&#xD;&#xA;  &#xD;&#xA;  Try&#xD;&#xA;  {&#xD;&#xA;   $UserAssigned = $null&#xD;&#xA;   $UserAffected = $null&#xD;&#xA;   $IRguid = $null&#xD;&#xA;   $json = $null&#xD;&#xA;   &#xD;&#xA;   $UserAssigned = (Get-SCSMRelationshipObject -BySource $IR | ? { $_.RelationshipID -eq &quot;15e577a3-6bf9-6713-4eac-ba5a5b7c4722&quot; }).TargetObject.DisplayName&#xD;&#xA;   $UserAffected = (Get-SCSMRelationshipObject -BySource $IR | ? { $_.RelationshipID -eq &quot;dff9be66-38b0-b6d6-6144-a412a3ebd4ce&quot; }).TargetObject.DisplayName&#xD;&#xA;   &#xD;&#xA;  }&#xD;&#xA;  catch&#xD;&#xA;  {&#xD;&#xA;   if (!$UserAssigned)&#xD;&#xA;   {&#xD;&#xA;    $UserAssigned = &quot;Not Assigned&quot;&#xD;&#xA;   }&#xD;&#xA;  }&#xD;&#xA;  finally&#xD;&#xA;  {&#xD;&#xA;   switch ($IR.Status.displayname)&#xD;&#xA;   {&#xD;&#xA;    Resolved { $DateC = Get-Date ($IR.ResolvedDate) -Format r }&#xD;&#xA;    Closed { $DateC = Get-Date ($IR.ClosedDate) -Format r }&#xD;&#xA;    &#xD;&#xA;   }&#xD;&#xA;   [guid]$IRguid = $IR.get_id().Guid&#xD;&#xA;   &#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA;  $json = @&quot; &#xD;&#xA;  [{  &#xD;&#xA;   &quot;WorkItemTitle&quot;:&quot;$($IR.Title)&quot;,&#xD;&#xA;      &quot;ItemType&quot;:&quot;Incident&quot;,&#xD;&#xA;      &quot;IDValue&quot;:&quot;$($IR.id)&quot;,&#xD;&#xA;   &quot;CreatedDate&quot;:&quot;$($sd)&quot;,&#xD;&#xA;   &quot;RDate&quot;:&quot;$($DateC)&quot;,&#xD;&#xA;   &quot;Analyst&quot;:&quot;$($UserAssigned)&quot;,&#xD;&#xA;   &quot;User&quot;:&quot;$($UserAffected)&quot;,&#xD;&#xA;   &quot;Status&quot;:&quot;$($IR.Status.displayname)&quot;,&#xD;&#xA;   &quot;Classification&quot;:&quot;$($IR.Classification.displayname)&quot;,&#xD;&#xA;   &quot;guid&quot;:&quot;$($IRguid)&quot;,&#xD;&#xA;   &quot;Urgency&quot;:&quot;$($IR.Urgency.displayname)&quot;,&#xD;&#xA;   &quot;Impact&quot;:&quot;$($IR.Impact.displayname)&quot;,&#xD;&#xA;   &quot;Tier&quot;:&quot;$($IR.TierQueue.displayname)&quot;,&#xD;&#xA;   &quot;DateValue&quot;:&quot;$($dt)&quot;,&#xD;&#xA;   &quot;WorkItem&quot;:true&#xD;&#xA;  }]&#xD;&#xA;&quot;@&#xD;&#xA;  &#xD;&#xA;  # Submit the data to the API endpoint&#xD;&#xA;  $completed = $false&#xD;&#xA;  $retrycount = 0&#xD;&#xA;  $retries = 5&#xD;&#xA;  &#xD;&#xA;  While (!$completed)&#xD;&#xA;  {&#xD;&#xA;   &#xD;&#xA;   try&#xD;&#xA;   {&#xD;&#xA;    $PostRequest = Post-OMSData -customerId $customerId -sharedKey $sharedKey -body ([System.Text.Encoding]::UTF8.GetBytes($json)) -logType $logType&#xD;&#xA;   }&#xD;&#xA;   Catch&#xD;&#xA;   {&#xD;&#xA;    if ($retrycount -ge $retries)&#xD;&#xA;    {&#xD;&#xA;     Write-EventLog -LogName 'Operations Manager' -Source 'OMS Connector' -EventId 11000 -Category 0 -EntryType Error -Message &quot;OMS Connector Cannot Upload to OMS, Incident with ID: $($IR.id)&quot;&#xD;&#xA;    }&#xD;&#xA;    else&#xD;&#xA;    {&#xD;&#xA;     Write-EventLog -LogName 'Operations Manager' -Source 'OMS Connector' -EventId 11000 -Category 0 -EntryType Warning -Message &quot;OMS Connector trying  to Upload to OMS with count:$retrycount,Incident with ID: $($IR.id) &quot;&#xD;&#xA;     Start-Sleep -Seconds 5&#xD;&#xA;     $retrycount++&#xD;&#xA;    }&#xD;&#xA;   }&#xD;&#xA;   finally&#xD;&#xA;   {&#xD;&#xA;    $completed = $true&#xD;&#xA;    Write-EventLog -LogName 'Operations Manager' -Source 'OMS Connector' -EventId 10001 -Category 0 -EntryType Information -Message &quot;OMS Connector Succesfully Upload to OMS, Incident with ID: $($IR.id)&quot;&#xD;&#xA;   }&#xD;&#xA;  }&#xD;&#xA;  &#xD;&#xA; }&#xD;&#xA;}&#xD;&#xA;# SIG # Begin signature block&#xD;&#xA;# MIIUAAYJKoZIhvcNAQcCoIIT8TCCE+0CAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB&#xD;&#xA;# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR&#xD;&#xA;# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUfuq4Y0NfYUNrdZdXbiUooYe/&#xD;&#xA;# wVmggg60MIIEFDCCAvygAwIBAgILBAAAAAABL07hUtcwDQYJKoZIhvcNAQEFBQAw&#xD;&#xA;# VzELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNV&#xD;&#xA;# BAsTB1Jvb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw0xMTA0&#xD;&#xA;# MTMxMDAwMDBaFw0yODAxMjgxMjAwMDBaMFIxCzAJBgNVBAYTAkJFMRkwFwYDVQQK&#xD;&#xA;# ExBHbG9iYWxTaWduIG52LXNhMSgwJgYDVQQDEx9HbG9iYWxTaWduIFRpbWVzdGFt&#xD;&#xA;# cGluZyBDQSAtIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlO9l&#xD;&#xA;# +LVXn6BTDTQG6wkft0cYasvwW+T/J6U00feJGr+esc0SQW5m1IGghYtkWkYvmaCN&#xD;&#xA;# d7HivFzdItdqZ9C76Mp03otPDbBS5ZBb60cO8eefnAuQZT4XljBFcm05oRc2yrmg&#xD;&#xA;# jBtPCBn2gTGtYRakYua0QJ7D/PuV9vu1LpWBmODvxevYAll4d/eq41JrUJEpxfz3&#xD;&#xA;# zZNl0mBhIvIG+zLdFlH6Dv2KMPAXCae78wSuq5DnbN96qfTvxGInX2+ZbTh0qhGL&#xD;&#xA;# 2t/HFEzphbLswn1KJo/nVrqm4M+SU4B09APsaLJgvIQgAIMboe60dAXBKY5i0Eex&#xD;&#xA;# +vBTzBj5Ljv5cH60JQIDAQABo4HlMIHiMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMB&#xD;&#xA;# Af8ECDAGAQH/AgEAMB0GA1UdDgQWBBRG2D7/3OO+/4Pm9IWbsN1q1hSpwTBHBgNV&#xD;&#xA;# HSAEQDA+MDwGBFUdIAAwNDAyBggrBgEFBQcCARYmaHR0cHM6Ly93d3cuZ2xvYmFs&#xD;&#xA;# c2lnbi5jb20vcmVwb3NpdG9yeS8wMwYDVR0fBCwwKjAooCagJIYiaHR0cDovL2Ny&#xD;&#xA;# bC5nbG9iYWxzaWduLm5ldC9yb290LmNybDAfBgNVHSMEGDAWgBRge2YaRQ2XyolQ&#xD;&#xA;# L30EzTSo//z9SzANBgkqhkiG9w0BAQUFAAOCAQEATl5WkB5GtNlJMfO7FzkoG8IW&#xD;&#xA;# 3f1B3AkFBJtvsqKa1pkuQJkAVbXqP6UgdtOGNNQXzFU6x4Lu76i6vNgGnxVQ380W&#xD;&#xA;# e1I6AtcZGv2v8Hhc4EvFGN86JB7arLipWAQCBzDbsBJe/jG+8ARI9PBw+DpeVoPP&#xD;&#xA;# PfsNvPTF7ZedudTbpSeE4zibi6c1hkQgpDttpGoLoYP9KOva7yj2zIhd+wo7AKvg&#xD;&#xA;# IeviLzVsD440RZfroveZMzV+y5qKu0VN5z+fwtmK+mWybsd+Zf/okuEsMaL3sCc2&#xD;&#xA;# SI8mbzvuTXYfecPlf5Y1vC0OzAGwjn//UYCAp5LUs0RGZIyHTxZjBzFLY7Df8zCC&#xD;&#xA;# BJ8wggOHoAMCAQICEhEh1pmnZJc+8fhCfukZzFNBFDANBgkqhkiG9w0BAQUFADBS&#xD;&#xA;# MQswCQYDVQQGEwJCRTEZMBcGA1UEChMQR2xvYmFsU2lnbiBudi1zYTEoMCYGA1UE&#xD;&#xA;# AxMfR2xvYmFsU2lnbiBUaW1lc3RhbXBpbmcgQ0EgLSBHMjAeFw0xNjA1MjQwMDAw&#xD;&#xA;# MDBaFw0yNzA2MjQwMDAwMDBaMGAxCzAJBgNVBAYTAlNHMR8wHQYDVQQKExZHTU8g&#xD;&#xA;# R2xvYmFsU2lnbiBQdGUgTHRkMTAwLgYDVQQDEydHbG9iYWxTaWduIFRTQSBmb3Ig&#xD;&#xA;# TVMgQXV0aGVudGljb2RlIC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK&#xD;&#xA;# AoIBAQCwF66i07YEMFYeWA+x7VWk1lTL2PZzOuxdXqsl/Tal+oTDYUDFRrVZUjtC&#xD;&#xA;# oi5fE2IQqVvmc9aSJbF9I+MGs4c6DkPw1wCJU6IRMVIobl1AcjzyCXenSZKX1GyQ&#xD;&#xA;# oHan/bjcs53yB2AsT1iYAGvTFVTg+t3/gCxfGKaY/9Sr7KFFWbIub2Jd4NkZrItX&#xD;&#xA;# nKgmK9kXpRDSRwgacCwzi39ogCq1oV1r3Y0CAikDqnw3u7spTj1Tk7Om+o/SWJMV&#xD;&#xA;# TLktq4CjoyX7r/cIZLB6RA9cENdfYTeqTmvT0lMlnYJz+iz5crCpGTkqUPqp0Dw6&#xD;&#xA;# yuhb7/VfUfT5CtmXNd5qheYjBEKvAgMBAAGjggFfMIIBWzAOBgNVHQ8BAf8EBAMC&#xD;&#xA;# B4AwTAYDVR0gBEUwQzBBBgkrBgEEAaAyAR4wNDAyBggrBgEFBQcCARYmaHR0cHM6&#xD;&#xA;# Ly93d3cuZ2xvYmFsc2lnbi5jb20vcmVwb3NpdG9yeS8wCQYDVR0TBAIwADAWBgNV&#xD;&#xA;# HSUBAf8EDDAKBggrBgEFBQcDCDBCBgNVHR8EOzA5MDegNaAzhjFodHRwOi8vY3Js&#xD;&#xA;# Lmdsb2JhbHNpZ24uY29tL2dzL2dzdGltZXN0YW1waW5nZzIuY3JsMFQGCCsGAQUF&#xD;&#xA;# BwEBBEgwRjBEBggrBgEFBQcwAoY4aHR0cDovL3NlY3VyZS5nbG9iYWxzaWduLmNv&#xD;&#xA;# bS9jYWNlcnQvZ3N0aW1lc3RhbXBpbmdnMi5jcnQwHQYDVR0OBBYEFNSihEo4Whh/&#xD;&#xA;# uk8wUL2d1XqH1gn3MB8GA1UdIwQYMBaAFEbYPv/c477/g+b0hZuw3WrWFKnBMA0G&#xD;&#xA;# CSqGSIb3DQEBBQUAA4IBAQCPqRqRbQSmNyAOg5beI9Nrbh9u3WQ9aCEitfhHNmmO&#xD;&#xA;# 4aVFxySiIrcpCcxUWq7GvM1jjrM9UEjltMyuzZKNniiLE0oRqr2j79OyNvy0oXK/&#xD;&#xA;# bZdjeYxEvHAvfvO83YJTqxr26/ocl7y2N5ykHDC8q7wtRzbfkiAD6HHGWPZ1BZo0&#xD;&#xA;# 8AtZWoJENKqA5C+E9kddlsm2ysqdt6a65FDT1De4uiAO0NOSKlvEWbuhbds8zkSd&#xD;&#xA;# wTgqreONvc0JdxoQvmcKAjZkiLmzGybu555gxEaovGEzbM9OuZy5avCfN/61PU+a&#xD;&#xA;# 003/3iCOTpem/Z8JvE3KGHbJsE2FUPKA0h0G9VgEB7EYMIIF9TCCBN2gAwIBAgIQ&#xD;&#xA;# KkVe0MLlP86cwi4qAhN8pjANBgkqhkiG9w0BAQsFADB4MQswCQYDVQQGEwJJTDEW&#xD;&#xA;# MBQGA1UEChMNU3RhcnRDb20gTHRkLjEpMCcGA1UECxMgU3RhcnRDb20gQ2VydGlm&#xD;&#xA;# aWNhdGlvbiBBdXRob3JpdHkxJjAkBgNVBAMTHVN0YXJ0Q29tIENsYXNzIDEgRFYg&#xD;&#xA;# U2VydmVyIENBMB4XDTE2MDgyMDEyMDkzNloXDTE3MDgyMDEyMDkzNlowKTELMAkG&#xD;&#xA;# A1UEBhMCR1IxGjAYBgNVBAMMEXNpZ24ubXNoZWxsYXMuY29tMIIBIjANBgkqhkiG&#xD;&#xA;# 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlhTZTQAyYBBLvnzT2hpfFY0vS/X6CcYDHNR2&#xD;&#xA;# lvwFJQBvpX2eM5k2jqiBDiDX4gY9YiwWukq+MiGGblNQiYa7d2Qgjs5TjoS/lMNJ&#xD;&#xA;# lZI/WIYj3H5e77qT7VwRS5KCmydId8Zud8avSa95l5sK45cnrFiT+flN0fe7b7nw&#xD;&#xA;# gv+4n7++1AlwvgzAfPdO/pY5RrTzQ+vOkhPF+jCFJ0gfG981DOWlISkorMnVwv2h&#xD;&#xA;# dXVN9bEzQ2THs+QQFeu1rzOlUEaTaaRm6kDlNZzz4XKU9U1gNxsT5Z52xD2sgZno&#xD;&#xA;# PAo6g/0Cm7jGuD8IAG32yrDACI2EtIAPDxCQajmivMx1ojivgwIDAQABo4ICyDCC&#xD;&#xA;# AsQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcD&#xD;&#xA;# ATAJBgNVHRMEAjAAMB0GA1UdDgQWBBQNOShOI1UPPhQjPuSYSAnfVeTifTAfBgNV&#xD;&#xA;# HSMEGDAWgBTXkU4BxLC/+Mhnk0Sc5zP6rZMMrzBvBggrBgEFBQcBAQRjMGEwJAYI&#xD;&#xA;# KwYBBQUHMAGGGGh0dHA6Ly9vY3NwLnN0YXJ0c3NsLmNvbTA5BggrBgEFBQcwAoYt&#xD;&#xA;# aHR0cDovL2FpYS5zdGFydHNzbC5jb20vY2VydHMvc2NhLnNlcnZlcjEuY3J0MDgG&#xD;&#xA;# A1UdHwQxMC8wLaAroCmGJ2h0dHA6Ly9jcmwuc3RhcnRzc2wuY29tL3NjYS1zZXJ2&#xD;&#xA;# ZXIxLmNybDAcBgNVHREEFTATghFzaWduLm1zaGVsbGFzLmNvbTAjBgNVHRIEHDAa&#xD;&#xA;# hhhodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS8wUQYDVR0gBEowSDAIBgZngQwBAgEw&#xD;&#xA;# PAYLKwYBBAGBtTcBAgUwLTArBggrBgEFBQcCARYfaHR0cHM6Ly93d3cuc3RhcnRz&#xD;&#xA;# c2wuY29tL3BvbGljeTCCAQUGCisGAQQB1nkCBAIEgfYEgfMA8QB2AGj2mPgfZIK+&#xD;&#xA;# OozuuSgdTPxxUV1nk9RE0QpnrLtPT/vEAAABVqgDmKcAAAQDAEcwRQIgJLiVb+Ja&#xD;&#xA;# a6BunnPE5hXdwenireOqMnkM24O7C6oTupUCIQDN0bYMsAwYmQVqO6EVxeQ+VbYd&#xD;&#xA;# iWfbnPrw79AZeM68YAB3AKS5CZC0GFgUh7sTosxncAo8NZgE+RvfuON3zQ7IDdwQ&#xD;&#xA;# AAABVqgDmcMAAAQDAEgwRgIhAPrLozUMYEWEdyPT0wBhuz9cUeGuWw4YluLGMO25&#xD;&#xA;# xAxwAiEAhKlyExSyer/qcuThyqGQEYR7YcuaHp7nVAnS8ffNsXQwDQYJKoZIhvcN&#xD;&#xA;# AQELBQADggEBACe6BNqcaS4N6cBHguRXo1XBottsPHUEqk+WaFsKvBndjzr01BkI&#xD;&#xA;# NhymaC64eMtnHRIybThGNhSQ+JLmGijM+Su414IJu0R1hkDUVo0hsNdCyL+1aBL1&#xD;&#xA;# pjqDvy/iqgP5wN9PU/5DAIvz8vAFJQC62Ci9x4whhtkiHjFsPwevgPU3om4rjaTb&#xD;&#xA;# 4wzAoDn49nXcEQO6WPuQJTgyzJoUL3+isk2PFW1XLS3IvXsbUNQ7V56woOCiPEyh&#xD;&#xA;# zGSpn/dhKYgfCgVlHvA2V3fzOBjlXq3PsKC38/gIc9HTcjcXN3oHsAGUI0jfjeSD&#xD;&#xA;# TS39FyssETg4QlSXrf4QZmjpf5v2ZJ+EvloxggS2MIIEsgIBATCBjDB4MQswCQYD&#xD;&#xA;# VQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjEpMCcGA1UECxMgU3RhcnRD&#xD;&#xA;# b20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxJjAkBgNVBAMTHVN0YXJ0Q29tIENs&#xD;&#xA;# YXNzIDEgRFYgU2VydmVyIENBAhAqRV7QwuU/zpzCLioCE3ymMAkGBSsOAwIaBQCg&#xD;&#xA;# WjAYBgorBgEEAYI3AgEMMQowCKACgAChAoAAMBkGCSqGSIb3DQEJAzEMBgorBgEE&#xD;&#xA;# AYI3AgEEMCMGCSqGSIb3DQEJBDEWBBSdZ9fUHVNaRoCJMizzYa7CDKJzSzANBgkq&#xD;&#xA;# hkiG9w0BAQEFAASCAQB0T26yQX3r5dKeDHDAg7PEe10ECZBsFUmpJIoB51crDzS4&#xD;&#xA;# 34cAsJytvBHS77efkxZmf646PWT3vkGgTbbAALjVymIao5sAVtiMfHFBHzDnaRMK&#xD;&#xA;# iq16xUG4frxvKda32IBOSMxeuEKWHIUS3NTY53asTEbty4X5h8UrYjtvwXBYdQ4Z&#xD;&#xA;# s2Z7gSezCnJlNxLxYuJmBiWHawtHO5YE9x37HOW8l4aU4THX6vExHGFMMrbYy5We&#xD;&#xA;# pq+3e1+I/tirWKGqe/fUAitRX8vFHdhLkJPaQmJINFFDd1dNx9AH45VegD66Z9Ym&#xD;&#xA;# SDVX20ss/AQNcFWnqVGskZjYJE7LX4oXMnKMgi42oYICojCCAp4GCSqGSIb3DQEJ&#xD;&#xA;# BjGCAo8wggKLAgEBMGgwUjELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNp&#xD;&#xA;# Z24gbnYtc2ExKDAmBgNVBAMTH0dsb2JhbFNpZ24gVGltZXN0YW1waW5nIENBIC0g&#xD;&#xA;# RzICEhEh1pmnZJc+8fhCfukZzFNBFDAJBgUrDgMCGgUAoIH9MBgGCSqGSIb3DQEJ&#xD;&#xA;# AzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE2MTEyNjIzMTgxNVowIwYJ&#xD;&#xA;# KoZIhvcNAQkEMRYEFFMGnqCudpkCLYg7c5pLKfjsCHHDMIGdBgsqhkiG9w0BCRAC&#xD;&#xA;# DDGBjTCBijCBhzCBhAQUY7gvq2H1g5CWlQULACScUCkz7HkwbDBWpFQwUjELMAkG&#xD;&#xA;# A1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExKDAmBgNVBAMTH0ds&#xD;&#xA;# b2JhbFNpZ24gVGltZXN0YW1waW5nIENBIC0gRzICEhEh1pmnZJc+8fhCfukZzFNB&#xD;&#xA;# FDANBgkqhkiG9w0BAQEFAASCAQB0+wctk+05wQb1hAKdk6J9/c9RnlO/geBSBX8v&#xD;&#xA;# 3ITlx77vDV8RKFVpv3DCLrF03vUg2fYlKWWnSAN0eZhuCGfpgWh0Aosi9wfDGHZr&#xD;&#xA;# NzSsaI+XFuQUBor7HJmMwDTbi0OACEa1zDhYtXvaNUH4pUPM1cpYF5nFr3s9mmdJ&#xD;&#xA;# 7+ljulkDZH/NL3WQW2s10XZ3V2rx2XQSNu69BojqOWgbF9veJ5vc5M+Kvg5Ct/gF&#xD;&#xA;# vClj6Lhq8J0sY3a5lB6X6IFQKQ3x0bQ97B5nVKCBjrg61bjW1LuLSVuE04gYupMb&#xD;&#xA;# DwlX56t5S9ZZXy5R4WkSbqqBG8u3AuPV2fq60EgBrHx4q1Gs&#xD;&#xA;# SIG # End signature block&#xD;&#xA;" TaskID="OMSWorkItemInciden_Wflow.WindowsPowerShellScript.ae4f3dfd_2634_4fd5_b7c1_9dd4d11ab749" ScriptName="{x:Null}">
		<ns0:WindowsPowerShellScript.Parameters>
			<x:Array Type="{x:Type p7:ActivityParameter}" xmlns:p7="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.Common;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.Common, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
				<ns1:ActivityParameter Key="ID" BindPath="{ActivityBind OMSWorkItemInciden_Wflow,Path=windowsPowerShellScript1_iID}" Value="Activity=OMSWorkItemInciden_Wflow, Path=windowsPowerShellScript1_iID" xmlns:ns1="clr-namespace:Microsoft.ServiceManager.WorkflowAuthoring.Common;Assembly=Microsoft.ServiceManager.WorkflowAuthoring.Common, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
			</x:Array>
		</ns0:WindowsPowerShellScript.Parameters>
	</ns0:WindowsPowerShellScript>
</SequentialWorkflowActivity>